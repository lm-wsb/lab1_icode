# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
name: Python application

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

concurrency:
  group: python-build-${{ github.ref }}  # Group for the entire workflow
  cancel-in-progress: true  # Cancel previous workflows if re-triggered

jobs:
  build_dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Cache Poetry dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ./example-app/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
          poetry --version
      - name: Install project dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

  lint:
    runs-on: ubuntu-latest
    needs: build_dependencies
    concurrency:
      group: python-build-lint-${{ github.ref }}  # Unique group for lint job
      cancel-in-progress: true
    defaults:
      run:
        working-directory: ./example-app
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Cache Poetry dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ./example-app/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  format:
    runs-on: ubuntu-latest
    needs: build_dependencies
    concurrency:
      group: python-build-format-${{ github.ref }}  # Unique group for format job
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Cache Poetry dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ./example-app/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
      - name: Format code with black
        run: |
          pip install black
          black . --check --diff

  security:
    runs-on: ubuntu-latest
    needs: build_dependencies
    concurrency:
      group: python-build-security-${{ github.ref }}  # Unique group for security job
      cancel-in-progress: true
    defaults:
      run:
        working-directory: ./example-app
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Cache Poetry dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ./example-app/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
      - name: Run security check with bandit
        run: |
          pip install bandit
          bandit -r .

  test:
    runs-on: ubuntu-latest
    needs: build_dependencies
    concurrency:
      group: python-build-test-${{ github.ref }}  # Unique group for test job
      cancel-in-progress: true
    defaults:
      run:
        working-directory: ./example-app
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Cache Poetry dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ./example-app/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test with pytest
        run: pytest
