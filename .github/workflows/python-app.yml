name: Python Application CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

concurrency:
  group: python-app-ci

jobs:
  setup:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./example-app

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Install dependencies
        id: install-dependencies
        run: |
          poetry install

  lint:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./example-app

    needs: setup

    steps:
      - uses: actions/checkout@v4
      - name: Cache lint dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: lint-deps-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Lint code
        run: poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

  formatter:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./example-app

    needs: setup

    steps:
      - uses: actions/checkout@v4
      - name: Format code
        run: poetry run black .

  security:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./example-app

    needs: setup

    steps:
      - uses: actions/checkout@v4
      - name: Security checks
        run: poetry run bandit -r .

  unittests:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./example-app

    needs: [lint, formatter, security]

    steps:
      - uses: actions/checkout@v4
      - name: Run unit tests
        run: |
          poetry run pytest
